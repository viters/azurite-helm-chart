{{- $fullName := printf "%s" (include "azurite.fullname" . ) -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "azurite.labels" . | nindent 4 }}
  {{- with .Values.statefulset.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.statefulset.replicaCount }}
  serviceName: {{ $fullName }}
  selector:
    matchLabels:
      app: {{ $fullName }}
  {{- if .Values.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage
        {{- if .Values.persistentVolume.annotations }}
        annotations:
          {{ toYaml .Values.persistentVolume.annotations | nindent 10 }}
        {{- end }}
      spec:
        {{- if .Values.persistentVolume.storageClass }}
        {{- if (eq "-" .Values.persistentVolume.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistentVolume.storageClass }}"
        {{- end }}
        {{- end }}
        accessModes:
          {{ toYaml .Values.persistentVolume.accessModes | nindent 10 }}
        resources:
          requests:
            storage: "{{ .Values.persistentVolume.size }}"
  {{- end }}
  template:
    metadata:
      {{- with .Values.statefulset.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ $fullName }}
        {{- include "azurite.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: storage
          emptyDir: {}
      securityContext:
        {{- toYaml .Values.statefulset.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.version | default .Chart.AppVersion | toString }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "azurite"
            - "-l"
            - "/data"
            {{- if .Values.config.disableProductStyleUrl }}
            - "--disableProductStyleUrl"
            {{- end }}
            {{- if .Values.config.loose }}
            - "--loose"
            {{- end }}
            {{- if .Values.config.blobs.enabled }}
            - "--blobHost"
            - "0.0.0.0"
            {{- end }}
            {{- if .Values.config.queues.enabled }}
            - "--queueHost"
            - "0.0.0.0"
            {{- end }}
            {{- if .Values.config.tables.enabled }}
            - "--tableHost"
            - "0.0.0.0"
            {{- end }}
            {{- range .Values.config.arguments }}
            - "{{ . }}"
            {{- end }}
          ports:
            {{- if .Values.config.blobs.enabled }}
            - containerPort: 10000
              name: blobs
            {{- end }}
            {{- if .Values.config.queues.enabled }}
            - containerPort: 10001
              name: queues
            {{- end }}
            {{- if .Values.config.tables.enabled }}
            - containerPort: 10002
              name: tables
            {{- end }}
          securityContext:
            {{- toYaml .Values.statefulset.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: storage
              mountPath: /data
          resources:
            {{- toYaml .Values.statefulset.resources | nindent 12 }}
      {{- with .Values.statefulset.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulset.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.statefulset.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
